<?xml version="1.0"?>
<project name="BuildPipeline" default="build">

  <!-- Configuration - default values that can be changed depending on the situation, can be changed in local.properties.xml -->
  <property name="configuration" value="Release" />
  <property name="version.major" value="0" />
  <property name="version.minor" value="1" />
  <property name="version.build" value="0" />

  <!-- External executable locations - depends on environment, can be changed in local.properties.xml -->
  <property name="msbuild" value="C:\Windows\Microsoft.NET\Framework64\v4.0.30319\msbuild.exe" />
  <property name="svn" value="C:\Program Files (x86)\VisualSVN Server\bin\svn.exe" />

  <!-- Working values and built-in values - need not be changed -->
  <property name="nunit.executable" value="lib\NUnit\nunit-console.exe" />

  <!-- Local properties, that overrides the ones from above -->
  <if test="${file::exists('local.properties.xml')}">
    <echo message="Loading local.properties.xml" />
    <include buildfile="local.properties.xml" />
  </if>

  <target name="all" />

  <target name="cleanProject">
    <delete dir="${projectFolder}\bin" failonerror="false" />
    <delete dir="${projectFolder}\obj" failonerror="false" />
  </target>

  <target name="clean" failonerror="false">
    <delete dir="build" failonerror="false" />
    <property name="projectFolder" value="src\Uncas.BuildPipeline.Web" />
    <call target="cleanProject" />
    <property name="projectFolder" value="test\Uncas.BuildPipeline.Tests.Unit" />
    <call target="cleanProject" />
    <property name="projectFolder" value="test\Uncas.BuildPipeline.Tests.Integration" />
    <call target="cleanProject" />
  </target>

  <target name="init" depends="clean">
    <delete dir="build" />
    <mkdir dir="build" />
  </target>

  <target name="build"
      depends="init,generateVersionInfoFile"
      description="compiles (msbuild) the solution (.sln file)">
    <exec program="${msbuild}"
        commandline="/p:Configuration=${configuration} Uncas.BuildPipeline.sln" />
  </target>

  <target name="test" depends="unitTest" />

  <target name="unitTest" depends="build,unitTestProperties">
    <call target="baseTest" />
  </target>
  <target name="unitTestProperties">
    <property
      name="TestProjectName"
      value="Uncas.BuildPipeline.Tests.Unit" />
  </target>

  <target name="baseTest">
    <property name="TestAssemblyDirectoryPath" value="test\${TestProjectName}\bin\${configuration}" />
    <property name="TestAssemblyFileName" value="${TestProjectName}.dll" />
    <property name="TestResultFileName" value="${TestProjectName}.TestResult.xml" />
    <property name="test.directory" value="build\test" />
    <copy todir="${test.directory}">
      <fileset basedir="${TestAssemblyDirectoryPath}">
        <include name="*.*" />
      </fileset>
    </copy>
    <copy todir="${test.directory}">
      <fileset basedir="lib\NUnit">
        <include name="**\*.*" />
      </fileset>
    </copy>
    <echo message="Testing ${TestProjectName}" />
    <exec program="${test.directory}\nunit-console.exe"
      workingdir="${test.directory}"
      commandline="${TestAssemblyFileName} /framework=4.0.30319 /xml=${TestResultFileName}">
    </exec>
    <if test="${property::exists('CCNetArtifactDirectory')}">
      <copy file="${test.directory}\${TestResultFileName}" 
        todir="${CCNetArtifactDirectory}\testresults" overwrite="true" />
    </if>
  </target>

  <target name="getSubversionRevision" depends="init">
    <!-- Retrieve subversion revision number -->
    <echo message="Retrieving Subversion revision number" />
    <property name="svn.revision" value="0" />
    <exec
      program="${svn}"
      commandline='log --xml --limit 1 --username buildmaster --password buildmaster123 --no-auth-cache'
      output="build\revision.xml"
      failonerror="false" />
    <xmlpeek
      file="build\revision.xml"
      xpath="/log/logentry/@revision"
      property="svn.revision"
      failonerror="false" />
    <echo message="Using Subversion revision number: ${svn.revision}" />
  </target>

  <target name="PrepareCommit" depends="test">
    <echo message="Build and unit tests says OK!" />
  </target>

  <target name="generateVersionInfoFile" depends="getSubversionRevision">
    <if test="${property::exists('CCNetLabel')}">
      <property name="version.build" value="${CCNetLabel}" />
    </if>
    <property name="version.string" value="${version.major}.${version.minor}.${version.build}.${svn.revision}" />
    <asminfo output="src\VersionInfo.cs" language="CSharp">
      <attributes>
        <attribute type="System.Reflection.AssemblyCompanyAttribute" value="Uncas" />
        <attribute type="System.Reflection.AssemblyProductAttribute" value="Uncas.WebTester" />
        <attribute type="System.Reflection.AssemblyCopyrightAttribute" value="Copyright (c) 2010, Ole Lynge SÃ¸rensen" />
        <attribute type="System.Reflection.AssemblyVersionAttribute" value="${version.string}" />
        <attribute type="System.Reflection.AssemblyFileVersionAttribute" value="${version.string}" />
      </attributes>
    </asminfo>
  </target>

  <target name="packageTestProject">
    <copy todir="${package.dir}\tests\${ProjectName}">
      <fileset basedir="test\${ProjectName}\bin\${configuration}">
        <include name="*.*" />
        <exclude name="*.pdb" />
      </fileset>
    </copy>
  </target>

  <target name="package" depends="build,unitTest">
    <property name="package.dir" value="build\Uncas.BuildPipeline" />
    <copy todir="${package.dir}\apps\Uncas.BuildPipeline.Web">
      <fileset basedir="src\Uncas.BuildPipeline.Web">
        <include name="**\*.*" />
        <exclude name="bin\*.pdb" />
        <exclude name="obj\**\*.*" />
        <exclude name="**\*.cs" />
        <exclude name="*.csproj" />
      </fileset>
    </copy>

    <property name="ProjectName" value="Uncas.BuildPipeline.Tests.Unit" />
    <call target="packageTestProject" />

    <property name="ProjectName" value="Uncas.BuildPipeline.Tests.Integration" />
    <call target="packageTestProject" />

    <copy todir="${package.dir}\tools\NUnit">
      <fileset basedir="lib\NUnit">
        <include name="**\*.*" />
      </fileset>
    </copy>

    <property name="zipfile.name" value="Uncas.BuildPipeline-${version.string}.zip" />
    <property name="zipfile.path" value="build\${zipfile.name}" />
    <zip zipfile="${zipfile.path}">
      <fileset basedir="${package.dir}">
        <include name="**/*" />
      </fileset>
    </zip>
    <if test="${property::exists('CCNetArtifactDirectory')}">
      <copy file="${zipfile.path}" todir="${CCNetArtifactDirectory}\packages" overwrite="true" />
    </if>
  </target>

</project>
