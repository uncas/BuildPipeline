Features:
- Links to github.
- Display author + commit message (via local mirror).
- Build stages + deployment stages on front page...
- Show diffs (via local mirror).
- Create package that can be deployed to a remote webserver.
- Deployment: DeploymentMethod=FTP
- Deployment: DeploymentMethod=OutOfProcess
-- OutOfProcess: Enqueue in some external rollout system,
   where the external rollout system sends status updates back to BuildPipeline
-- Alternative: BuildPipeline polls the external ssytem for status updates...
- Deployment: Override the deployment script per environment
  (such that there is a default deployment script for a project,
  but this can be overridden for individual environment(s))

Infrastructure / minor things:
- Tests of existing logic, specs
- Cleanup in dependencies Uncas.Core.*
- Display full version including short hash in footer on website.
- Logging: Take file name + line number from inner-most exception.
- TopShelf service instead of home-brewed service...

Architecture:
- Events & readmodels
-- EventStore (AggregateName, AggregateId, EventName, EventTime, SequenceNumber, Data)
--- Aggregates: Pipeline, Deployment, Environment
-- PipelineReadStore
- Job host
- Review existing read logic vs. write logic
- Write vs. read (commands and read models)

Documentation:
- Create dummy project for testing/demonstrating how to use it: BuildPipeline-Example
