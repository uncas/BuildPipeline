Current priorities:
- Upgrade to .NET 4.5
- Deployment metod: FTP
-- Environments per project
-- Different deployment method per (ProjectId, EnvironmentId)
-- SQL table: DeploymentMethod(ProjectId NOT NULL, EnvironmentId NULL, DeploymentMethodType, Data)
    - DeploymentMethodType: 
    - Powershell: 
    - FTP: 
-- Or EventStore(EventId, EventTime, EventType, EventData, AggregateType, AggregateId, SequenceNumber)
       Events: PowershellDeploymentConfigured, FtpDeploymentConfigured
- Configure which environments are available for each project.

- Git log: Do not log as error when revision not found...
- Install script ('build.ps1 install')
- Display build stages + deployment stages on front page
- Attach release notes to commits.
- Show commits and release notes per deployment (via local mirror).

Feature ideas:
- API endpoint: Log start, Log success, Log failure, Log package
- Deployment: DeploymentMethod=OutOfProcess
-- OutOfProcess: Enqueue in some external rollout system,
   where the external rollout system sends status updates back to BuildPipeline
-- Alternative: BuildPipeline polls the external ssytem for status updates...
- Override deploy script per environment.
- Create package that can be deployed to a remote webserver.

Infrastructure / minor things:
- Display full version including short hash in footer on website.
- Logging: Take file name + line number from inner-most exception.
- TopShelf service instead of home-brewed service...
- Use twitter bootstrap

Logging: Display newest logs and when they were first encountered
- Service: Run through logs continuously, and update aggregate table
- Aggregate table:
-- Group by: ExceptionType, LogType, ServiceId, SimpleStackTrace
        , FileName, LineNumber, Version, StackTrace
        , CAST(LogTime AS date) AS LogDate, Hour(LogTime) AS LogHour
-- Aggregate: FirstEntry, LastEntry, DescriptionExample
        , ExceptionMessageExample, FullExceptionExample, NumberOfEntries
-- Log hash calculated from: ServiceId, LogType, FileName, LineNumber, SimpleStackTrace, ExceptionType
- List logs by type (exception type, log type, service id
        , simple stack trace, filename, line number)
- For each log entry: Display time of last entry, time of first entry
        , version of last entry, version of first entry, total count
        , description example, exception message example, full exception example, number of entries

Architecture:
- Events & readmodels
-- EventStore (AggregateName, AggregateId, EventName, EventTime, SequenceNumber, Data)
--- Aggregates: Pipeline, Deployment, Environment
-- PipelineReadStore
- Job host
- Review existing read logic vs. write logic
- Write vs. read (commands and read models)

Documentation:
- Create dummy project for testing/demonstrating how to use it: BuildPipeline-Example
